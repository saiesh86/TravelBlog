<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddButton" xml:space="preserve">
    <value>フィードの追加/編集</value>
  </data>
  <data name="AddCommentsLink" xml:space="preserve">
    <value>RSS フィードにコメントのリンクを含める</value>
  </data>
  <data name="AddNewFeedLink" xml:space="preserve">
    <value>新規フィードの追加</value>
  </data>
  <data name="AddSignature" xml:space="preserve">
    <value>RSS フィードに署名のリンクを含める</value>
  </data>
  <data name="AtomFeedType" xml:space="preserve">
    <value>Atom フィード</value>
  </data>
  <data name="AuthorLabel" xml:space="preserve">
    <value>フィード名:</value>
  </data>
  <data name="BackToPageLinkFormat" xml:space="preserve">
    <value>{0}に戻る</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="CancelButtonAccessKey" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="ClearCacheButton" xml:space="preserve">
    <value>フィード・キャッシュの削除</value>
  </data>
  <data name="ClearCacheWarning" xml:space="preserve">
    <value>フィードのキャッシュからすべての登録を削除してよろしいか?</value>
  </data>
  <data name="CreatedByLabel" xml:space="preserve">
    <value>作成者:</value>
  </data>
  <data name="DateCreatedLabel" xml:space="preserve">
    <value>作成日:</value>
  </data>
  <data name="DeleteButton" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="DeleteButtonAccessKey" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="DeleteFeedWarning" xml:space="preserve">
    <value>このフィードを削除してよろしいか?</value>
  </data>
  <data name="EditFeedLabel" xml:space="preserve">
    <value>フィードの編集</value>
  </data>
  <data name="EditImageAltText" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="EnableInPlacePublishing" xml:space="preserve">
    <value>場所を選択して公開?:</value>
  </data>
  <data name="EnableSelectivePublishing" xml:space="preserve">
    <value>選択して公開?:</value>
  </data>
  <data name="EntryPublishFalseAlternateText" xml:space="preserve">
    <value>未公開</value>
  </data>
  <data name="EntryPublishTrueAlternateText" xml:space="preserve">
    <value>公開</value>
  </data>
  <data name="FeatureName" xml:space="preserve">
    <value>フィード・マネジャー</value>
  </data>
  <data name="FeedEditPageTitle" xml:space="preserve">
    <value>フィード・エディター</value>
  </data>
  <data name="FeedTitleRequiredWarning" xml:space="preserve">
    <value>フィード・タイトルが必要です。</value>
  </data>
  <data name="FeedTypeLabel" xml:space="preserve">
    <value>フィードタイプ:</value>
  </data>
  <data name="FeedUrlLabel" xml:space="preserve">
    <value>フィード Url:</value>
  </data>
  <data name="FeedUrlRegexWarning" xml:space="preserve">
    <value>フィード Url は、http:// で始まる正しい形式で入力してください。</value>
  </data>
  <data name="FeedUrlRequiredWarning" xml:space="preserve">
    <value>フィードUrlが必要です。</value>
  </data>
  <data name="FilterInvalidMarkupAndPotentiallyInsecureContent" xml:space="preserve">
    <value>フィードから不正なマークアップと潜在的に危険なコンテンツをフィルターしますか？</value>
  </data>
  <data name="ImageUrlLabel" xml:space="preserve">
    <value>イメージ Url:</value>
  </data>
  <data name="MalformedMarkupWarning" xml:space="preserve">
    <value>このフィードエントリーは、正当でない(x)html を含んでいます。 
セキュリティのためその(x)html を削除し、クロスサイトスクリプティングを含む(x)htmlをこの内容にエンコードしました。</value>
  </data>
  <data name="ManagePublishingLink" xml:space="preserve">
    <value>公開を管理する</value>
  </data>
  <data name="PublishByDefaultLabel" xml:space="preserve">
    <value>デフォルトで公開:</value>
  </data>
  <data name="PublishingHeaderFormat" xml:space="preserve">
    <value>{0}の公開</value>
  </data>
  <data name="RSSAggregatorExcerptLengthSetting" xml:space="preserve">
    <value>抄録の長さ:</value>
  </data>
  <data name="RSSAggregatorExcerptSetting" xml:space="preserve">
    <value>抄録を使用?:</value>
  </data>
  <data name="RSSAggregatorExcerptSuffixSetting" xml:space="preserve">
    <value>抄録の添字:</value>
  </data>
  <data name="RSSAggregatorPageSizeSetting" xml:space="preserve">
    <value>ページの表示件数:</value>
  </data>
  <data name="RSSAggregatorShowAuthor" xml:space="preserve">
    <value>著者を表示?:</value>
  </data>
  <data name="RSSFeedAllowExternalImages" xml:space="preserve">
    <value>外部イメージを許可?:</value>
  </data>
  <data name="RSSFeedEntryCacheTimeoutSetting" xml:space="preserve">
    <value>エントリーのキャッシュ時間（分）</value>
  </data>
  <data name="RSSFeedFeedListCacheTimeoutSetting" xml:space="preserve">
    <value>フィードリストのキャッシュ時間（分）</value>
  </data>
  <data name="RSSFeedFeedListColumnsSetting" xml:space="preserve">
    <value>フィードリストの段組</value>
  </data>
  <data name="RSSFeedListLabelSetting" xml:space="preserve">
    <value>フィードリストの名前</value>
  </data>
  <data name="RSSFeedMaxDayCountSetting" xml:space="preserve">
    <value>投稿を表示する日数</value>
  </data>
  <data name="RSSFeedMaxPostsPerFeedSetting" xml:space="preserve">
    <value>フィード当たりのの最大投稿数</value>
  </data>
  <data name="RSSFeedShowAggregateFeedLink" xml:space="preserve">
    <value>フィードリンクを集約表示?</value>
  </data>
  <data name="RSSFeedShowErrorMessageOnInvalidPosts" xml:space="preserve">
    <value>適正でないマークアップの投稿をエラーメッセージを表示?</value>
  </data>
  <data name="RSSFeedShowFeedListLeftSetting" xml:space="preserve">
    <value>左側にフィードのリストを表示</value>
  </data>
  <data name="RSSFeedShowFeedListRightSetting" xml:space="preserve">
    <value>右側にフィードのリストを表示?</value>
  </data>
  <data name="RSSFeedShowHeadingsOnlySetting" xml:space="preserve">
    <value>タイトルのみ表示?</value>
  </data>
  <data name="RSSFeedShowIndividualFeedLinks" xml:space="preserve">
    <value>個々のフィードのリンクを表示?</value>
  </data>
  <data name="RSSFeedSortAscending" xml:space="preserve">
    <value>昇順?:</value>
  </data>
  <data name="RssFeedType" xml:space="preserve">
    <value>RSS フィード</value>
  </data>
  <data name="RSSFeedUseFeedListAsFilterSetting" xml:space="preserve">
    <value>フィードリンクをフィルターとして使用?</value>
  </data>
  <data name="SaveButton" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="SaveButtonAccessKey" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="WebSiteLabel" xml:space="preserve">
    <value>ウェブサイト Url:</value>
  </data>
  <data name="WebUrlRegexWarning" xml:space="preserve">
    <value>ウェブサイト Url は、http:// で始まる正しい形式で入力してください。</value>
  </data>
</root>